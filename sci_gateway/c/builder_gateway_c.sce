// This file is released under the 3-clause BSD license. See COPYING-BSD.

function builder_gw_c()
	gateway_path = get_absolute_file_path();
    module_path =  fullpath(fullfile(gateway_path,"..",".."));

  // PutLhsVar managed by user in sci_sum and in sci_sub
  // if you do not this variable, PutLhsVar is added
  // in gateway generated (default mode in scilab 4.x and 5.x)
  //WITHOUT_AUTO_PUTLHSVAR = %F;

  FUNCTIONS_GATEWAY = ["wrev", "int_wrev";...
	  "wrev2", "int_wrev2";...
	  "qmf", "int_qmf";...
	  //"swt_conv", "int_conv";...
	"iconv", "int_iconv";...
	  "dyaddown", "int_dyaddown";...
	  "dyadup", "int_dyadup";...
	  "wkeep", "int_wkeep";...
	"wextend", "int_wextend";...
	"wcodemat", "int_wcodemat";...
	//"ind2rgb", "int_ind2rgb";...
	"wrot3", "int_mat3Dtran";...
	"wrev3", "int_wrev3";...
	"orthfilt", "int_orthfilt";...
	"dbwavf", "int_dbwavf";...
	"coifwavf", "int_coifwavf";...
	"symwavf", "int_symwavf";...
	"legdwavf", "int_legdwavf";...
	"biorwavf", "int_biorwavf";...
	"rbiorwavf", "int_rbiorwavf";...
	"biorfilt", "int_biorfilt";...
	"wfilters", "int_wfilters";...
	"wmaxlev", "int_wmaxlev";...
	"dwtmode", "int_dwtmode";...
	"dwt", "int_dwt";...
	"idwt", "int_idwt";...
	"wavedec", "int_wavedec";...
	"waverec", "int_waverec";...
	"wrcoef", "int_wrcoef";...
	"appcoef", "int_appcoef";...
	"detcoef", "int_detcoef";...
	"wenergy", "int_wenergy";...
	"upcoef", "int_upcoef";...
	"upwlev", "int_upwlev";...
	"dwt2", "int_dwt2";...
	"idwt2", "int_idwt2";...
	"wavedec2", "int_wavedec2";...
	"waverec2", "int_waverec2";...
	"wenergy2", "int_wenergy2";...
	"appcoef2", "int_appcoef2";...
	"detcoef2", "int_detcoef2";...
	"wrcoef2", "int_wrcoef2";...
	"upwlev2", "int_upwlev2";...
	"upcoef2", "int_upcoef2";...
	"swt", "int_swt";...
	"iswt", "int_iswt";...
	"swt2", "int_swt2";...
	"iswt2", "int_iswt2";...
	"sinus", "int_sinus";...
	"poisson", "int_poisson";...
	"mexihat", "int_mexihat";...
	"morlet", "int_morlet";...
	"DOGauss", "int_DOGauss";...
	"cmorwavf", "int_cmorlet";...
	"shanwavf", "int_shanwavf";...
	"fbspwavf", "int_fbspwavf";...
	"cauwavf", "int_cauchy";...
	"gauswavf", "int_Gauswavf";...
	"cgauwavf","int_cgauss";...
	"wavefun", "int_wavefun";...
	"wavefun2", "int_wavefun2";...
	"cwt", "int_cwt";...
	"dwt3", "int_dwt3";...
	"idwt3", "int_idwt3";...
	"FSfarras","int_FSfarras";...
	"dualfilt1","int_dualfilt1";...
	"dualtree","int_dualtree";...
	"idualtree","int_idualtree";...
	"dualtree2D","int_dualtree2D";...
	"idualtree2D","int_idualtree2D";...
	"cplxdual2D","int_cplxdual2D";...
	"icplxdual2D","int_icplxdual2D";...
	"wnorm","int_wnorm";...
	"waveletfamilies","int_waveletfamilies";...
	"meyeraux","int_meyeraux";...
	"meyer2","int_meyer";
	];
  FILES_GATEWAY = [ "utility_int.c","dwt_int.c", "dwt1d_int.c", "dwt2d_int.c","swt_int.c",...
  "cwt_int.c","dwt3d_int.c","cowt_int.c"];    // objects files

	ldflags = ""
    includes = [gateway_path
                fullfile(module_path,"src","c")
                fullfile(module_path,"src","gwsupport")];
    if getos() == "Windows"
        includes = [includes;fullfile(SCI,"modules","output_stream",includes)];
    end
    cflags = strcat("-I "+includes+" ")
    // Caution : the order matters !
    libs = [
    "../../src/c/libswtlib"
    "../../src/gwsupport/libswt_gwsupport"
    ];

    tbx_build_gateway("swt_c", FUNCTIONS_GATEWAY, FILES_GATEWAY, gateway_path, libs, ldflags, cflags);

endfunction

builder_gw_c();
clear builder_gw_c; // remove builder_gw_c on stack
